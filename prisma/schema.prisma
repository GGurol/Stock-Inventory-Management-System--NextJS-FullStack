generator client {
  provider      = "prisma-client-js"
  // CORRECTED: Use the Alpine-compatible engine
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  userId String @db.ObjectId
}

model Product {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  categoryId String   @db.ObjectId
  createdAt  DateTime @db.Date
  name       String
  price      Float
  quantity   BigInt
  sku        String   @unique
  status     String
  supplierId String   @db.ObjectId
  userId     String   @db.ObjectId
}

model Supplier {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  userId String @db.ObjectId
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  // --- CORRECTED: Added a default value for the creation timestamp ---
  createdAt DateTime  @default(now()) @db.Date
  email     String    @unique
  name      String
  password  String
  updatedAt DateTime? @updatedAt @db.Date // Also a good practice to add @updatedAt
  username  String?   @unique
}

// Other models can be cleaned up if not used, but are left here for now.
model Department {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Invoice {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  invoiceNumber Json?  @unique
  orderId       Json?  @unique
}

model Order {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  orderNumber Json?  @unique
}

model OrderItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Permission {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  resource Json?
  userId   Json?
  @@unique([userId, resource])
}

model Session {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken Json?  @unique
}

model StockAlert {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model StockAllocation {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  departmentId Json?
  productId    Json?
  @@unique([productId, departmentId])
}

model UserAction {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model VerificationToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token Json?  @unique
}